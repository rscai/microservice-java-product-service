plugins {
	id 'org.springframework.boot' version '2.1.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	//id "io.freefair.lombok" version "4.1.0"
	id "org.sonarqube" version "2.7.1"
	id 'jacoco'
	id 'org.asciidoctor.convert' version '1.5.3'
}

group = 'io.github.rscai.microservices'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
	snippetsDir = file('build/generated-snippets')
	set('springCloudVersion', "Greenwich.SR3")
}

dependencies {
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.projectlombok:lombok:1.18.10'
	annotationProcessor 'org.projectlombok:lombok:1.18.10'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "rscai_microservices-catalog"
		property "sonar.sourceEncoding", "UTF-8"
	}
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

bootRun {
	String springProfilesActive = System.properties['spring.profiles.active']
	systemProperty "spring.profiles.active", springProfilesActive
}